# circleciのバージョン
version: 2.1
jobs:
  build:
    docker:
      - image: openkbs/jdk11-mvn-py3
      # - image: circleci/mysql:5.7.29
      #   environment:
      #   # passwordを記述しなくても大丈夫な設定↓
      #     MYSQL_ALLOW_EMPTY_PASSWORD: yes
      #     MYSQL_DATABASE: 'TestTempleTaskManager'
      #     MYSQL_ROOT_PASSWORD: ''
      # steps:jobで実行する処理を順番に定義していく
    steps:
    # CI環境上のworking_directryにgitリポジトリをコピーする
      - checkout
      # sshの接続設定
      - add_ssh_keys:
          fingerprints: 
            - "09:01:47:8a:a1:97:76:fc:70:ab:55:95:30:69:06:1b"
      # キャッシュがsave_cacheされていればリストア（バックアップを適用）する
      - restore_cache:
          # リストアするキャッシュを指定（keyを指定してデータを保存）keyの中身がよく分からない
          key: maven-v1-{{ checksum "pom.xml" }}
    # コマンドを実行する 
      - run:
          name: ./mvnw install
          command: ./mvnw install -Dmaven.test.skip=true
      # パッケージなどのファイルのキャッシュ
      - save_cache:
          # pathsで指定したディレクトリorファイルをkeyを指定して保存する
          # ↑何をしてるの？
          key: maven-v1-{{ checksum "pom.xml" }}
          paths: ~/.m2
      # 一時的にファイルをjob間で共有できるようにする
      - persist_to_workspace:
          root: .
          paths: .
          
  test:
    docker:
      - image: openkbs/jdk11-mvn-py3
      - image: circleci/mysql:5.7.29
        environment:
        # passwordを記述しなくても大丈夫な設定↓
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: 'TestTempleTaskManager'
          MYSQL_ROOT_PASSWORD: ''
    steps:
    #  - persist_to_workspace:
          # root: .
          # paths: .
          # ↑ここに入ってテストを実行する checkout以降
      - checkout
      - attach_workspace:
          at: .
      # - run: 
      #     name: flyway install
          # command: flyway migrate -url=dbc:mysql://localhost:3306/TestTempleTaskManager -user=root -password=wind3576
      - run:
          name: unit test
          command: ./mvnw test

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: deploy to heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
# ↓jpbをどのような順番で実行して行くのかを記載する
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
