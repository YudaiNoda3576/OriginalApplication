# circleciのバージョン
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk-buster-browsers
    steps:
    # CI環境上のworking_directryにgitリポジトリをコピーする
      - checkout
      # キャッシュがsave_cacheされていればリストア（バックアップを適用）する
      - restore_cache:
          # リストアするキャッシュを指定
          key: maven-v1-{{ checksum "pom.xml" }}
    # コマンドを実行する
      - run:
      # run名
          name: ./mvnw install
          # コマンドの実行
          command: ./mvnw install
      # パッケージなどのファイルのキャッシュ
      - save_cache:
          # ファイルのハッシュ値
          key: maven-v1-{{ checksum "pom.xml" }}
          paths: ~/.m2
      # 一時的にファイルをjob間で共有できるようにする
      - persist_to_workspace:
          root: .
          paths: .

      docker:
          # すべてのコマンドを実行する場所となるプライマリ コンテナ イメージ
          # 上のイメージとは別に必要？　だとした何？
        - image: 
          environment:
          TEST_DATABASE_URL: 
        # サービスコンテナイメージ
        - image: buildo/h2database
          environment:
          - H2DB_ROOT_PASSWORD=
          - H2DB_DATABASE=
          - H2DB_USER=
          - H2DB_PASSWORD=
      steps:
        - checkout
        - run:
            name: install dependecies
            command: composer install 
        - run:
            name: install dockerize
            command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            environment:
              DOCKERIZE_VERSION: v0.3.0
        - run:
            name: Wait for db
            command: dockerize -wait  http://localhost:8082/  -timeout 1m
        - run:
            name: Test
            command: ./mvnw test


  test:
    docker:
      - image: circleci/openjdk:11-jdk-buster-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: unit test
          command: ./mvnw test

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: deploy to heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
